{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS cloudformation template to create network setup for NAT and instantiate NAT instance",
    "Outputs": {
        "NatElasticIP": {
            "Description": "Elastic IP assigned to NAT Instance",
            "Value": {
                "Ref": "NATEIP"
            }
        },
        "NatInstnaceId": {
            "Description": "Instance ID of nat",
            "Value": {
                "Ref": "NATEC2Instance"
            }
        },
        "NatPrivateIP": {
            "Description": "Private IP address assigned for NAT",
            "Value": {
                "Fn::GetAtt": [
                    "NATEC2Instance",
                    "PrivateIp"
                ]
            }
        }
    },
    "Parameters": {
        "nataz": {
            "ConstraintDescription": "Must be valid availability zone",
            "Description": "Availability zone where NAT environment to be installed",
            "Type": "String"
        },
        "natcidr": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "10.0.0.0/24",
            "Description": " The IP address range that can be used to NAT subnet",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "natinstanceami": {
            "ConstraintDescription": "Must be valid and existing AMI",
            "Description": "Enter existing AMI ID to instantiate NAT",
            "Type": "String"
        },
        "natinstsize": {
            "ConstraintDescription": "Must be valid EC2 instance size",
            "Description": "Enter NAT instance size",
            "Type": "String"
        },
        "natkeypairname": {
            "ConstraintDescription": "Must be valid and existing ec2 keypair",
            "Description": "Enter existing EC2 keypair to enable SSH access to the instance",
            "Type": "String"
        },
        "privateroutetableid": {
            "ConstraintDescription": "Must be valid and existing Private route table id",
            "Description": "Enter existing Private Route table ID where NAT id should be added once NAT is up and running",
            "Type": "String"
        },
        "publiceroutetableid": {
            "ConstraintDescription": "Must be valid and existing Public route table id",
            "Description": "Enter existing Public Route table ID where NAT subnet can be associated",
            "Type": "String"
        },
        "vpccidr": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "10.0.0.0/16",
            "Description": " The IP address range used in VPC",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "vpcid": {
            "ConstraintDescription": "Must be valid and existing VPC ID",
            "Description": "Enter existing VPC ID where NAT needs to be setup",
            "Type": "String"
        }
    },
    "Resources": {
        "NATEC2Instance": {
            "Properties": {
                "ImageId": {
                    "Ref": "natinstanceami"
                },
                "InstanceType": {
                    "Ref": "natinstsize"
                },
                "KeyName": {
                    "Ref": "natkeypairname"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "NatInstanceSecurityGroup"
                    }
                ],
                "SourceDestCheck": "false",
                "SubnetId": {
                    "Ref": "natsubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "/",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "NAT Instance"
                                ]
                            ]
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -x \n",
                                "export REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "yum update -y\n",
                                "echo 1 > /proc/sys/net/ipv4/ip_forward\n",
                                "echo 0 > /proc/sys/net/ipv4/conf/eth0/send_redirects \n",
                                "/sbin/iptables -t nat -A POSTROUTING -o eth0 -s 0.0.0.0/0 -j MASQUERADE \n",
                                "/sbin/iptables-save > /etc/sysconfig/iptables \n",
                                "mkdir -p /etc/sysctl.d/ \n",
                                "echo net.ipv4.ip_forward = 1 >> /etc/sysctl.d/nat.conf \n",
                                "echo net.ipv4.conf.eth0.send_redirects = 0 >> /etc/sysctl.d/nat.conf \n",
                                "# All is well so signal success\n",
                                "/opt/aws/bin/cfn-signal -s true '",
                                {
                                    "Ref": "NATWaitHandle"
                                },
                                "'\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "NATEIP": {
            "DependsOn": "NATEC2Instance",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "NATEC2Instance"
                }
            },
            "Type": "AWS::EC2::EIP"
        },
        "NATWaitCondition": {
            "DependsOn": [
                "NATEC2Instance"
            ],
            "Properties": {
                "Handle": {
                    "Ref": "NATWaitHandle"
                },
                "Timeout": 1800
            },
            "Type": "AWS::CloudFormation::WaitCondition"
        },
        "NATWaitHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "NatInstanceSecurityGroup": {
            "Properties": {
                "GroupDescription": "NAT Security Group",
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    }
                ],
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": {
                            "Ref": "vpccidr"
                        },
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "157.191.2.68/32",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "/",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "NAT SG"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "vpcid"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "NatRoute": {
            "DependsOn": "NATEC2Instance",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "InstanceId": {
                    "Ref": "NATEC2Instance"
                },
                "RouteTableId": {
                    "Ref": "privateroutetableid"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "natSubnetRouteTableAssociation": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "publiceroutetableid"
                },
                "SubnetId": {
                    "Ref": "natsubnet"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "natsubnet": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "nataz"
                },
                "CidrBlock": {
                    "Ref": "natcidr"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "/",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "Nat Subnet"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "vpcid"
                }
            },
            "Type": "AWS::EC2::Subnet"
        }
    }
}